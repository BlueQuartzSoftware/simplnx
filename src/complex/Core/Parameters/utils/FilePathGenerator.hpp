#pragma once

#include "complex/complex_export.hpp"

#include <cstdint>
#include <string>
#include <vector>

namespace complex
{
namespace FilePathGenerator
{
/**
 * @brief generateFileList This method will generate a file list in the correct order of the files that should
 * be imported int32_to an h5ebsd file
 * @param start Z Slice Start
 * @param end S Slice End
 * @param increment How much to increment each item
 * @param hasMissingFiles Are any files missing
 * @param stackLowToHigh How should the file list be generated by starting at the start value and increasing or starting at the endIndex and deccreasing
 * @param inputPath Example File Name
 * @param filePrefix The start of the file name
 * @param fileSuffix the end of the file name
 * @param fileExtension The file extension (including the '.' char)
 * @param paddingDigits the number of padding digits to use when generating the integer index value
 * @return
 */
COMPLEX_EXPORT std::vector<std::string> GenerateFileList(int32_t start, int32_t end, int32_t increment, bool& hasMissingFiles, bool stackLowToHigh, const std::string& inputPath,
                                                         const std::string& filePrefix, const std::string& fileSuffix, const std::string& fileExtension, int32_t paddingDigits);
} // namespace FilePathGenerator
} // namespace complex
