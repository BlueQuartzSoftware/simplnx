name: linux

on:
  pull_request:
    branches:
      - develop
      - master
  push:
    branches:
      - develop
      - master

jobs:
  build:
    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
        cxx:
          - g++-11
          - clang++-14
        include:
          - cxx: g++-11
            cc: gcc-11
          - cxx: clang++-14
            cc: clang-14
    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx myst-parser sphinx-markdown-tables sphinx_rtd_theme numpy
      - name: Add C++ Problem Matcher
        uses: ammaraskar/gcc-problem-matcher@0.2.0
      - name: Install Dependencies - 2
        run: |
          sudo apt-get -y install ninja-build
      - name: Install Sphinx
        run: |
          sudo pip3 install sphinx myst-parser sphinx-markdown-tables sphinx_rtd_theme numpy
      - name: Setup NuGet Credentials
        shell: bash
        run: |
          mono `vcpkg fetch nuget | tail -n 1` \
          sources add \
          -source "https://nuget.pkg.github.com/BlueQuartzSoftware/index.json" \
          -storepasswordincleartext \
          -name "GitHub" \
          -username "BlueQuartzSoftware" \
          -password "${{secrets.GITHUB_TOKEN}}"
          mono `vcpkg fetch nuget | tail -n 1` \
          setapikey "${{secrets.GITHUB_TOKEN}}" \
          -source "https://nuget.pkg.github.com/BlueQuartzSoftware/index.json"
      - name: Configure
        env:
          CC: ${{matrix.cc}}
          CXX: ${{matrix.cxx}}
        run: |
          cmake --preset ci-linux-x64 ${{github.workspace}}
      - name: Build
        run: |
          cmake --build --preset ci-linux-x64
      - name: Test
        run: |
          ctest --preset ci-linux-x64
