name: asan

on:
  schedule:
    - cron: '15 5 * * *'

jobs:
  build:
    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
      CC: clang-14
      CXX: clang++-14
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx myst-parser sphinx-markdown-tables sphinx_rtd_theme numpy
      - name: Add C++ Problem Matcher
        uses: ammaraskar/gcc-problem-matcher@0.2.0
      - name: Install Dependencies - 2
        run: |
          sudo apt-get -y install ninja-build
      - name: Install Sphinx
        run: |
          sudo pip3 install sphinx myst-parser sphinx-markdown-tables sphinx_rtd_theme numpy
      - name: Setup NuGet Credentials
        shell: bash
        run: |
          mono `vcpkg fetch nuget | tail -n 1` \
          sources add \
          -source "https://nuget.pkg.github.com/BlueQuartzSoftware/index.json" \
          -storepasswordincleartext \
          -name "GitHub" \
          -username "BlueQuartzSoftware" \
          -password "${{secrets.GITHUB_TOKEN}}"
          mono `vcpkg fetch nuget | tail -n 1` \
          setapikey "${{secrets.GITHUB_TOKEN}}" \
          -source "https://nuget.pkg.github.com/BlueQuartzSoftware/index.json"
      - name: Configure
        run: |
          cmake --preset ci-asan ${{github.workspace}}
      - name: Build
        run: |
          export LD_LIBRARY_PATH=$($CXX -print-file-name=libclang_rt.asan-x86_64.so)
          cmake --build --preset ci-asan
      - name: Test
        run: |
          export LD_PRELOAD=$($CXX -print-file-name=libclang_rt.asan-x86_64.so)
          ctest --preset ci-asan -E "PY"
          export ASAN_OPTIONS=detect_leaks=0
          ctest --preset ci-asan -R "PY"
