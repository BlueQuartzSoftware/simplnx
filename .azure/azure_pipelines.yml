
resources:
  repositories:
  - repository: complex
    type: github
    endpoint: BlueQuartzSoftware
    name: BlueQuartzSoftware/complex
  - repository: DREAM3D_Data
    type: github
    endpoint: BlueQuartzSoftware
    name: DREAM3D/DREAM3D_Data

trigger:
  - develop

jobs:
- job:
  strategy:
    matrix:
      macOS:
        imageName: Darwin
      Windows:
        imageName: Windows_NT
      Linux:
        imageName: Linux

  pool:
    name: BlueQuartz Self Hosted
    demands:
      - Agent.OS -equals $(imageName)
      - BQ.COMPLEX_PLUGINS
 
  workspace:
    clean: all

  timeoutInMinutes: 120

  variables:
    dream3d_source_dir: $(Build.Repository.LocalPath)/DREAM3DNX
    complex_source_dir: $(Build.Repository.LocalPath)/complex
    build_type: Release

  steps:
  - checkout: self
    submodules: true
  - checkout: complex
    submodules: true
  - checkout: DREAM3D_Data
    submodules: true

  - script: |
      echo System.PullRequest.SourceBranch=$(System.PullRequest.SourceBranch)
      echo System.PullRequest.PullRequestNumber=$(System.PullRequest.PullRequestNumber)
      echo Build.SourceBranchName=$(Build.SourceBranchName)
      echo Build.Repository.Name=$(Build.Repository.Name)
      echo Build.Repository.Uri=$(Build.Repository.Uri)
      echo Agent.WorkFolder=$(Agent.WorkFolder)
      echo Agent.OS=$(Agent.OS)
      echo Build.BuildNumber=$(Build.BuildNumber)
    displayName: 'Dump Azure Variables'

  - powershell: |
      $DLL_PATH = Get-Content $(Agent.WorkFolder)/NX_DLL_PATH.txt -Raw
      Write-Host "##vso[task.prependpath]$DLL_PATH"
    condition: eq(variables['Agent.OS'], 'Windows_NT')
    displayName: Appending to PATH

  - script: |
      cmake -S $(complex_source_dir) -B $(Build.BinariesDirectory) -G Ninja -DCMAKE_BUILD_TYPE:STRING=$(build_type) -DCOMPLEX_EXTRA_PLUGINS="ITKImageProcessing;Core;OrientationAnalysis" -C $(Agent.WorkFolder)/NX.cmake -DBUILDNAME:STRING="NX-$(Agent.MachineName)-$(Agent.OS)-$(Build.SourceBranchName)_$(Build.BuildNumber)"
    displayName: Configure COMPLEX

  - script: |
      cmake --build $(Build.BinariesDirectory) --config $(build_type) --target all
    displayName: Build COMPLEX

  - script: |
      cd $(Build.BinariesDirectory)
      cpack -C $(build_type) --verbose
    continueOnError: true
    displayName: Packing COMPLEX

  - script: |
      cd $(Build.BinariesDirectory)
      ctest -C $(build_type) -D Experimental --timeout 7200 -DCTEST_SITE:STRING=$(Agent.MachineName).bluequartz.net -Ddashboard_source_name:STRING=DREAM3D
    continueOnError: true
    displayName: Testing COMPLEX

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: CTest
      testResultsFiles: $(Build.BinariesDirectory)/Testing/*/Test.xml
      testRunTitle: CTest_$(Agent.Name)_$(Agent.OS)
      failTaskOnFailedTests: false
    displayName: Publish Test Results
