#==================================================================================================
# Building against a branch *other* than `develop` on simplnx. There are a few items that will
# need to be changed.
#
# [1] Under `resources->repository->name` you will need to put your fork.
#     You will also need to add another attribute to the `repository` for the branch/ref from github
# [2] Under the `jobs->job->variables` section you will need to adjust the "simplnx_origin_name"
#     variable to match your fork.
#==================================================================================================

resources:
  repositories:
  - repository: simplnx
    type: github
    endpoint: BlueQuartzSoftware
    name: BlueQuartzSoftware/simplnx

trigger:
  - develop

jobs:
- job:
  strategy:
    matrix:
      macOS:
        imageName: Darwin
        preset_name: ci-macos-x64
        home_dir: /Users/buildbot
      Windows:
        imageName: Windows_NT
        preset_name: ci-windows-v143
        home_dir: C:/Users/buildbot
      Linux:
        imageName: Linux
        preset_name: ci-linux-x64
        home_dir: /home/buildbot
        python_dir: /opt/hostedtoolcache/Python/3.10.13/x64/bin

  pool:
    name: BlueQuartz Self Hosted
    demands:
      - Agent.OS -equals $(imageName)
      - BQ.SIMPLNX

  workspace:
    clean: all

  timeoutInMinutes: 120

  variables:
    simplnx_source_dir: $(Build.Repository.LocalPath)
    dream3d_data_dir: $(Agent.WorkFolder)/DREAM3D_Data
    model_type: Experimental
    build_type: Release
    simplnx_origin_name: bluequartzsoftware
    simplnx_branch_name: develop

  steps:
  - checkout: self
    submodules: true

  - powershell: |
      try {
        echo System.PullRequest.SourceBranch=$(System.PullRequest.SourceBranch)
        echo System.PullRequest.PullRequestNumber=$(System.PullRequest.PullRequestNumber)
      } catch {
      }
      echo Build.SourceBranchName=$(Build.SourceBranchName)
      echo Build.Repository.Name=$(Build.Repository.Name)
      echo Build.Repository.Uri=$(Build.Repository.Uri)
      echo Build.Repository.LocalPath=$(Build.Repository.LocalPath)
      echo Build.BuildNumber=$(Build.BuildNumber)
      echo Agent.WorkFolder=$(Agent.WorkFolder)
      echo Agent.OS=$(Agent.OS)
      echo preset_name=$(preset_name)
    displayName: 'Dump Azure Variables'

#==================================================================================================
# Change from the default https checkout to a git remote with ssh
# The build bots have appropriate ssh keys to make this work
# This also allows CDash to get the real git commit that we are on for DREAM3DNX
#==================================================================================================
  - powershell: |
      cd $(Build.Repository.LocalPath)
      git config core.sshCommand "ssh -i $(home_dir)/.ssh/id_rsa"
      git remote rename origin azure
      git remote add origin ssh://git@github.com/$(simplnx_origin_name)/simplnx
      git fetch origin
    displayName: Update Simplnx Repo
 
#==================================================================================================
# CDash Section:
#    In this section we are going to call `ctest` 3 times in order to separate out the output from
# each CDash stage: Configure,Update :: Build :: Testing
# This makes the output easier to parse through for the testing.
#==================================================================================================

  - powershell: |
      $UpdatedPath = '$(python_dir)' + [IO.Path]::PathSeparator + [System.Environment]::GetEnvironmentVariable('PATH', [System.EnvironmentVariableTarget]::Process)
      [System.Environment]::SetEnvironmentVariable('PATH', $UpdatedPath, [System.EnvironmentVariableTarget]::Process)
      cd $(Build.BinariesDirectory)
      ctest -VV -DCTEST_SOURCE_DIR=$(simplnx_source_dir) -DCTEST_BINARY_DIRECTORY=$(Build.BinariesDirectory) -Ddashboard_model=Experimental -DCTEST_DASHBOARD_ROOT=$(Build.Repository.LocalPath) -DCMAKE_PRESET_NAME="$(preset_name)" -DCTEST_CONFIGURATION_TYPE=Release -S $(Build.Repository.LocalPath)/.azure/azure_ci_configure.cmake
    displayName: CDash Update/Configure
  
  - powershell: |
      cd $(Build.BinariesDirectory)
      ctest -VV -DCTEST_SOURCE_DIR=$(simplnx_source_dir) -DCTEST_BINARY_DIRECTORY=$(Build.BinariesDirectory) -Ddashboard_model=Experimental -DCTEST_DASHBOARD_ROOT=$(Build.Repository.LocalPath) -DCMAKE_PRESET_NAME="$(preset_name)" -DCTEST_CONFIGURATION_TYPE=Release -S $(Build.Repository.LocalPath)/.azure/azure_ci_build.cmake
    displayName: CDash Build

  - powershell: |
      cd $(Build.BinariesDirectory)
      ctest -VV -DCTEST_SOURCE_DIR=$(simplnx_source_dir) -DCTEST_BINARY_DIRECTORY=$(Build.BinariesDirectory) -Ddashboard_model=Experimental -DCTEST_DASHBOARD_ROOT=$(Build.Repository.LocalPath) -DCMAKE_PRESET_NAME="$(preset_name)" -DCTEST_CONFIGURATION_TYPE=Release -S $(Build.Repository.LocalPath)/.azure/azure_ci_test.cmake
    displayName: CDash Test

#==================================================================================================
# CPack Section
#==================================================================================================
  - powershell: |
      cd $(Build.BinariesDirectory)
      cpack -C $(build_type) --verbose
    displayName: Packing SIMPLNX

#==================================================================================================
# Publish Test Results
#==================================================================================================
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: CTest
      testResultsFiles: $(Build.BinariesDirectory)/Testing/*/Test.xml
      testRunTitle: CTest_$(Agent.Name)_$(Agent.OS)
      failTaskOnFailedTests: true
    displayName: Publish Commercial Test Results

  # - script: |
  #     cmake -S $(simplnx_source_dir) -B $(Build.BinariesDirectory)-Free -G Ninja -DDREAM3D_ENABLE_DOCUMENTATION=OFF -DDREAM3D_ENABLE_COMMERCIAL_BUILD=OFF -DCMAKE_BUILD_TYPE:STRING=$(build_type) -DDREAM3D_DATA_DIR=$(dream3d_data_dir) -C $(Agent.WorkFolder)/NX.cmake -DSIMPLNX_EXTRA_PLUGINS="Core;ITKImageProcessing;OrientationAnalysis" -DCTEST_BUILD_NAME:STRING="NX-Free-$(Agent.MachineName)-$(Agent.OS)-$(Build.SourceBranchName)_$(Build.BuildNumber)"
  #   displayName: Configure Free DREAM3D

  # - script: |
  #     cmake --build $(Build.BinariesDirectory)-Free --config $(build_type) --target all
  #   displayName: Build Free DREAM3D

  # - script: |
  #     cd $(Build.BinariesDirectory)-Free
  #     cpack -C $(build_type) --verbose
  #   continueOnError: false
  #   displayName: Packing Free DREAM3D

  # - script: |
  #     cd $(Build.BinariesDirectory)-Free
  #     ctest -C $(build_type) -D Experimental --timeout 7200 -DCTEST_SITE:STRING=$(Agent.MachineName).bluequartz.net -Ddashboard_source_name:STRING=DREAM3D
  #   continueOnError: true
  #   displayName: Testing Free DREAM3D

  # - task: PublishTestResults@2
  #   inputs:
  #     testResultsFormat: CTest
  #     testResultsFiles: $(Build.BinariesDirectory)-Free/Testing/*/Test.xml
  #     testRunTitle: CTest_$(Agent.Name)_$(Agent.OS)
  #     failTaskOnFailedTests: true
  #   displayName: Publish Free Test Results
    